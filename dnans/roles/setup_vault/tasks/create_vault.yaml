---
- name: Prompt for ansible_become_password
  pause:
    prompt: "Enter the become password (leave empty to exclude):"
  register: become_password_input
  no_log: true

- name: Prompt for SMB password
  pause:
    prompt: "Enter SMB password (leave empty to auto-generate):"
  register: smb_password_input
  no_log: true

- name: Generate SMB password if not entered
  set_fact:
    smb_password: "{{ smb_password_input.user_input | default(lookup('password', '/dev/null chars=ascii_letters,digits length=15')) }}"

- name: Prompt for database password
  pause:
    prompt: "Enter database password (leave empty to auto-generate):"
  register: database_password_input
  no_log: true

- name: Generate database password if not entered
  set_fact:
    database_password: "{{ database_password_input.user_input | default(lookup('password', '/dev/null chars=ascii_letters,digits length=15')) }}"

- name: Set Immich database password
  set_fact:
    immich_database_password: "{{ database_password }}"

- name: Set WordPress database password
  set_fact:
    wordpress_database_password: "{{ database_password }}"

- name: Prompt for ROOT password
  pause:
    prompt: "Enter ROOT password (leave empty to auto-generate):"
  register: root_password_input
  no_log: true

- name: Generate ROOT password if not entered
  set_fact:
    wordpress_database_root_password: "{{ root_password_input.user_input | default(lookup('password', '/dev/null chars=ascii_letters,digits length=15')) }}"

- name: Prompt for Cloudflare API token
  pause:
    prompt: "Enter Cloudflare API token (leave empty for default ''):"
  register: cloudflare_api_input
  no_log: true

###

- name: Encrypt ansible_become_password
  command: >
    ansible-vault encrypt_string
    "ansible_become_password={{ become_password_input.user_input | default('') }}"
    --name "ansible_become_password"
  register: ansible_become_password_encrypted
  no_log: true

- name: Append ansible_become_password to vault.yaml
  lineinfile:
    path: group_vars/vault.yaml
    line: "{{ ansible_become_password_encrypted.stdout }}"
    create: true

- name: Encrypt smb_password
  command: >
    ansible-vault encrypt_string
    "smb_password={{ smb_password }}"
    --name "smb_password"
  register: smb_password_encrypted
  no_log: true

- name: Append smb_password to vault.yaml
  lineinfile:
    path: group_vars/vault.yaml
    line: "{{ smb_password_encrypted.stdout }}"
    create: true

- name: Encrypt immich_database_password
  command: >
    ansible-vault encrypt_string
    "immich_database_password={{ immich_database_password }}"
    --name "immich_database_password"
  register: immich_database_password_encrypted
  no_log: true

- name: Append immich_database_password to vault.yaml
  lineinfile:
    path: group_vars/vault.yaml
    line: "{{ immich_database_password_encrypted.stdout }}"
    create: true

- name: Encrypt wordpress_database_password
  command: >
    ansible-vault encrypt_string
    "wordpress_database_password={{ wordpress_database_password }}"
    --name "wordpress_database_password"
  register: wordpress_database_password_encrypted
  no_log: true

- name: Append wordpress_database_password to vault.yaml
  lineinfile:
    path: group_vars/vault.yaml
    line: "{{ wordpress_database_password_encrypted.stdout }}"
    create: true

- name: Encrypt wordpress_database_root_password
  command: >
    ansible-vault encrypt_string
    "wordpress_database_root_password={{ wordpress_database_root_password }}"
    --name "wordpress_database_root_password"
  register: wordpress_database_root_password_encrypted
  no_log: true

- name: Append wordpress_database_root_password to vault.yaml
  lineinfile:
    path: group_vars/vault.yaml
    line: "{{ wordpress_database_root_password_encrypted.stdout }}"
    create: true

- name: Encrypt cloudflare_api_token
  command: >
    ansible-vault encrypt_string
    "cloudflare_api_token={{ cloudflare_api_input.user_input | default('') }}"
    --name "cloudflare_api_token"
  register: cloudflare_api_token_encrypted
  no_log: true

- name: Append cloudflare_api_token to vault.yaml
  lineinfile:
    path: group_vars/vault.yaml
    line: "{{ cloudflare_api_token_encrypted.stdout }}"
    create: true



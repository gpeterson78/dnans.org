---
# Title Block 1: Check if vault.yaml exists and handle creation/setup
- name: Check if vault.yaml exists
  stat:
    path: "{{ playbook_dir }}/group_vars/all/vault.yaml"
  register: vault_file

- name: Create an encrypted vault.yaml if it does not exist
  block:
    - name: Create vault.yaml from template
      template:
        src: "vault.yaml.j2"
        dest: "{{ playbook_dir }}/group_vars/all/vault.yaml"
      when: not vault_file.stat.exists

    - name: Encrypt the new vault.yaml
      command: ansible-vault encrypt {{ playbook_dir }}/group_vars/all/vault.yaml
      when: not vault_file.stat.exists

# Title Block 2: Check if become password is set in vault.yaml
- name: Decrypt vault.yaml temporarily to check contents
  command: ansible-vault view {{ playbook_dir }}/group_vars/all/vault.yaml
  register: vault_content
  changed_when: false

- name: Parse vault.yaml content
  set_fact:
    vault_data: "{{ vault_content.stdout | from_yaml }}"

- name: Ensure ansible_become_pass is set
  fail:
    msg: "The become password must be set in vault.yaml or the playbook must be run with --ask-become-password."
  when:
    - vault_data.ansible_become_pass | default('') == ''
    - ansible_become_pass is not defined

# Title Block 4: Check if dnans_admin is set in vault.yaml
- name: Ensure dnans_admin is set
  block:
    - name: Prompt for dnans_admin if not set
      vars_prompt:
        - name: admin_user
          prompt: "Please provide the admin user name:"
          private: no
      when: vault_data.dnans_admin | default('') == ''

    - name: Decrypt vault.yaml temporarily
      command: ansible-vault decrypt {{ playbook_dir }}/group_vars/all/vault.yaml

    - name: Add dnans_admin to vault.yaml
      lineinfile:
        path: "{{ playbook_dir }}/group_vars/all/vault.yaml"
        line: "dnans_admin: {{ admin_user }}  # project global admin user"
        create: yes

    - name: Re-encrypt vault.yaml
      command: ansible-vault encrypt {{ playbook_dir }}/group_vars/all/vault.yaml
  when: vault_data.dnans_admin | default('') == ''
